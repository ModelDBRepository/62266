objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}

//Begin I/V Clamp Electrode
{
load_file("electrod.hoc")
}
{
ocbox_=new Electrode(0)
execute("can_locate=1 sec=\"soma\" xloc=0.5 locate(0)", ocbox_)
execute("vc.dur[0]=60 vc.amp[0]=-120", ocbox_)
execute("vc.dur[1]=50 vc.amp[1]=-10", ocbox_)
execute("vc.dur[2]=10 vc.amp[2]=-65", ocbox_)
execute("stim.del=10 stim.dur=5 stim.amp=0.02", ocbox_)
execute("vcsteps=5", ocbox_)
execute("samp=stim.amp  store_vclamp() glyph()", ocbox_)
ocbox_ = ocbox_.v1
ocbox_.map("I/V Clamp Electrode", 946, 448, 224.25, 371.25)
}
objref ocbox_
//End I/V Clamp Electrode


//Begin Insert/Remove Mechanisms
{
load_file("inserter.hoc", "Inserter")
}
{
soma ocbox_ = new Inserter(0)
}
{object_push(ocbox_)}
{
mt.select("pas") i = mt.selected()
ms[i] = new MechanismStandard("pas")
ms[i].set("g_pas", 4.5e-05, 0)
ms[i].set("e_pas", -70, 0)
mstate[i]= 1
maction(i)
mt.select("hh") i = mt.selected()
ms[i] = new MechanismStandard("hh")
ms[i].set("gnabar_hh", 0.12, 0)
ms[i].set("gkbar_hh", 0.036, 0)
ms[i].set("gl_hh", 0.0003, 0)
ms[i].set("el_hh", -54.3, 0)
mstate[i]= 0
mt.select("B_DR") i = mt.selected()
ms[i] = new MechanismStandard("B_DR")
ms[i].set("gkbar_B_DR", 0.00065, 0)
mstate[i]= 1
maction(i)
mt.select("B_A") i = mt.selected()
ms[i] = new MechanismStandard("B_A")
ms[i].set("gkbar_B_A", 0.00101, 0)
mstate[i]= 1
maction(i)
mt.select("B_Na") i = mt.selected()
ms[i] = new MechanismStandard("B_Na")
ms[i].set("gnabar_B_Na", 0.003214, 0)
mstate[i]= 1
maction(i)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("Insert/Remove Mechanisms", 14, 647, 114.75, 204.75)
}
objref ocbox_
//End Insert/Remove Mechanisms

{
xpanel("NEURON Main Panel", 0)
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
celsius = 6.3
xvalue("celsius","celsius", 1,"", 0, 1 )
global_ra = 200
xvalue("Axial Resistivity","global_ra", 1,"set_ra()", 1, 1 )
xbutton("RunControl","nrncontrolmenu()")
xmenu("New Graph", 0)
xbutton("Voltage axis","newPlotV()")
xbutton("Current axis","newPlotI()")
xbutton("State axis","newPlotS()")
xbutton("Shape plot","newshapeplot()")
xbutton("Vector movie","newvectorplot()")
xbutton("Phase Plane","newphaseplane()")
xbutton("Grapher","load_proc(\"makegrapher\") makegrapher()")
xmenu()
xmenu("Point Processes", 0)
xmenu("Managers", 0)
xbutton("Point Manager","load_template(\"PointProcessManager\") makeppm()")
xbutton("Point Group","load_template(\"PointProcessGroupManager\") makeppgm()")
xbutton("Electrode","load_proc(\"makeelectrode\") makeelectrode()")
xmenu()
xmenu("Viewers", 0)
xmenu("PointProcesses", 0)
xbutton("IClamp","makePointBrowser(\"IClamp\")")
xbutton("AlphaSynapse","makePointBrowser(\"AlphaSynapse\")")
xbutton("SEClamp","makePointBrowser(\"SEClamp\")")
xbutton("VClamp","makePointBrowser(\"VClamp\")")
xbutton("APCount","makePointBrowser(\"APCount\")")
xmenu()
xmenu()
xmenu()
xmenu("Distributed Mechanisms", 0)
xmenu("Managers", 0)
xbutton("Inserter","load_template(\"Inserter\") makeinserter()")
xbutton("Homogeneous Spec","load_proc(\"makeshowmechanism\") makeshowmechanism()")
xmenu()
xmenu("Viewers", 0)
xbutton("Shape Name","load_template(\"MenuExplore\") makeMenuExplore()")
xbutton("Name Values","nrnallsectionmenu()")
xmenu("Mechanisms (Globals)", 0)
xbutton("na_ion","nrnglobalmechmenu(\"na_ion\")")
xbutton("k_ion","nrnglobalmechmenu(\"k_ion\")")
xbutton("hh","nrnglobalmechmenu(\"hh\")")
xmenu()
xmenu()
xmenu()
xmenu("Miscellaneous", 0)
xmenu("Clipboard", 0)
xbutton("Save to File","load_proc(\"clipboard_save\") clipboard_save()")
xbutton("Retrieve from File","load_proc(\"clipboard_retrieve\") clipboard_retrieve()")
xmenu()
xbutton("Family","load_template(\"Family\") makeFamily()")
xbutton("Parameterized Function","load_template(\"FunctionFitter\") makefitter()")
xbutton("Run Fitter","load_template(\"RunFitter\") makerunfitter()")
xmenu("Impedance", 0)
xbutton("Frequency","load_template(\"ImpedanceRatio\") makeImpRatio()")
xbutton("Path","load_template(\"Impx\") makeImpx()")
xbutton("log(A) vs x","load_template(\"LogAvsX\") makelogax()")
xbutton("Shape","load_template(\"ImpShape\") makeImpShape()")
xmenu()
xmenu()
xpanel(11,304)
}
{
xpanel("RunControl", 0)
v_init = -70
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 120
xvalue("t","t", 2 )
tstop = 120
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 20
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xpanel(637,511)
}
{
xpanel("soma(0 - 1) (Parameters)", 0)
xlabel("soma(0 - 1) (Parameters)")
xlabel("nseg = 1")
soma.L = 10
xvalue("L","soma.L", 1,"define_shape()", 0, 0 )
soma.diam = 10
xvalue("diam","soma.diam", 1,"", 0, 0 )
soma.cm = 1
xvalue("cm","soma.cm", 1,"", 0, 0 )
soma.gnabar_B_Na = 0.003214
xvalue("gnabar_B_Na","soma.gnabar_B_Na", 1,"", 0, 0 )
soma.ena = 53
xvalue("ena","soma.ena", 1,"", 0, 0 )
soma.gkbar_B_A = 0.00101
xvalue("gkbar_B_A","soma.gkbar_B_A", 1,"", 0, 0 )
soma.gkbar_B_DR = 0.00065
xvalue("gkbar_B_DR","soma.gkbar_B_DR", 1,"", 0, 0 )
soma.ek = -84
xvalue("ek","soma.ek", 1,"", 0, 0 )
soma.g_pas = 4.5e-05
xvalue("g_pas","soma.g_pas", 1,"", 0, 0 )
soma.e_pas = -70
xvalue("e_pas","soma.e_pas", 1,"", 0, 0 )
xpanel(296,511)
}
{
save_window_ = new Graph(0)
save_window_.size(50,80,-0.5,0.3)
scene_vector_[3] = save_window_
{save_window_.view(50, -0.5, 30, 0.8, 128, 8, 300.75, 158.5)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.xaxis(0,250,0,5,0,0,1)
save_window_.yaxis(-2,2,0,4,0,0,1)
save_window_.addvar("soma.ik_B_A( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ik_B_DR( 0.5 )", 7, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.i_pas( 0.5 )", 4, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ina_B_Na( 0.5 )", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,120,-100,60)
scene_vector_[4] = save_window_
{save_window_.view(0, -100, 120, 160, 546, 5, 531, 268.75)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("soma.v( 0.5 )", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
